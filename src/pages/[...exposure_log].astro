---
import For from '../components/For.astro';
import Show from '../components/Show.astro';
import ExposureLog from '../components/ExposureLog.astro';
import Layout from '../layouts/Layout.astro';
import {fetchExposureLog, fetchNarrativeLog} from '../lib/api.js';
import type { IExposureLog, INarrativeLog, ILogEntry } from '../types.js';

const exposure_logs = (await fetchExposureLog() as IExposureLog[]);
const narrative_logs = (await fetchNarrativeLog() as INarrativeLog[]);

type LogEntryTuple = {date_added: string, log_entry: ILogEntry};

let log_entries_tuples: LogEntryTuple[] = [];

exposure_logs.forEach( exposure_log => {
	log_entries_tuples.push( {date_added: exposure_log.date_added, log_entry: {
		date_added: exposure_log.date_added,
		day_obs: exposure_log.day_obs,
		flag: exposure_log.exposure_flag,
		instrument: exposure_log.instrument,
		is_human: exposure_log.is_human,
		message_text: exposure_log.message_text,
		obs_id: exposure_log.obs_id,
		seq_num: exposure_log.seq_num,
		user_id: exposure_log.user_id,
	}} );
}
);

narrative_logs.forEach( narrative_log => {
	log_entries_tuples.push({date_added: narrative_log.date_added, log_entry: {
		date_added: narrative_log.date_added,
		day_obs: null,
		flag: "narrative",
		instrument: null,
		is_human: narrative_log.is_human,
		message_text: narrative_log.message_text,
		obs_id: null,
		seq_num: null,
		user_id: narrative_log.user_id,
	}});	
}
);

log_entries_tuples.sort((a, b) => b.date_added.localeCompare(a.date_added));

const log_entries: ILogEntry[] = log_entries_tuples.map(log_entry => log_entry.log_entry);

---

<Layout>
	<section>
		<nav aria-labelledby="current-page">
			Select a date to explore: 
			<input type="date" id="start" name="log_date" onchange="this.form.submit()" disabled="true" title="Not implemented yet."/>
			<!-- {' or go '}
			<button title="Click to enable live logging." name="live">Live</button> -->
			{' Maximum number of entries: '}
			<select name="limit" id="limit" disabled="true" title="Not implemented yet.">
				<option value="unlimited" selected="unlimited">unlimited</option>
				<option value=10>10</option>
				<option value=100>100</option>
				<option value=200>200</option>
				<option value=500>500</option>
			</select>
		</nav>
		<main>
			<Show when={log_entries}>
				<ul>
					<For each={log_entries}>{(log_entries: ILogEntry) => <ExposureLog exposure_log={log_entries} />}</For>
				</ul>
			</Show>
		</main>
	</section>
</Layout>

<style>
	section {
		padding-top: 45px;
	}

	nav,
	main {
		background-color: rgb(248 250 252);
		border-radius: 2px;
		text-align: center;
	}

	nav {
		padding: 15px 30px;
		position: fixed;
		text-align: center;
		top: 55px;
		left: 0;
		right: 0;
		z-index: 998;
		box-shadow: 0 1px 2px rgba(0, 0, 0, 0.1);
	}

	nav a {
		margin: 0 1em;
	}

	[aria-disabled='true'] {
		color: rgb(71 85 105);
		margin: 0 1em;
	}

	main {
		position: absolute;
		margin: 30px 0;
		width: 100%;
	}

	ul {
		list-style-type: none;
		padding: 0;
		margin: 0;
	}

	@media (max-width: 600px) {
		main {
			margin: 10px 0;
		}
	}
</style>
